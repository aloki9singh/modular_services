{"version":3,"sources":["../../src/models/otp.model.ts"],"sourcesContent":["import { OtpDocument } from \"@interfaces/otp.interface\";\r\nimport { Schema, model, Document } from \"mongoose\";\r\n\r\nconst otpSchema = new Schema<OtpDocument>(\r\n\t{\r\n\t\tidentifier: String,\r\n\t\tpasswords: [\r\n\t\t\t{\r\n\t\t\t\tcode: { type: Number },\r\n\t\t\t\texpiresAt: { type: Date },\r\n\t\t\t\tverified: { type: Boolean, default: false },\r\n\t\t\t\trequestedAt: { type: Date, default: Date.now },\r\n\t\t\t\tserviceProvider: { type: String },\r\n\t\t\t\tserviceProviderResponse: { type: Schema.Types.Mixed },\r\n\t\t\t},\r\n\t\t],\r\n\t\tfailedAttempts: { type: Number, default: 0 },\r\n\t\tlockoutUntil: { type: Date, default: null },\r\n\t},\r\n\t{\r\n\t\ttimestamps: true,\r\n\t\tversionKey: false,\r\n\t},\r\n);\r\n\r\nconst OtpModel = model<OtpDocument>(\"OTP\", otpSchema);\r\n\r\nexport default OtpModel;\r\n"],"names":["otpSchema","Schema","identifier","String","passwords","code","type","Number","expiresAt","Date","verified","Boolean","default","requestedAt","now","serviceProvider","serviceProviderResponse","Types","Mixed","failedAttempts","lockoutUntil","timestamps","versionKey","OtpModel","model"],"mappings":";;;;+BA2BA;;;eAAA;;;0BA1BwC;AAExC,MAAMA,YAAY,IAAIC,gBAAM,CAC3B;IACCC,YAAYC;IACZC,WAAW;QACV;YACCC,MAAM;gBAAEC,MAAMC;YAAO;YACrBC,WAAW;gBAAEF,MAAMG;YAAK;YACxBC,UAAU;gBAAEJ,MAAMK;gBAASC,SAAS;YAAM;YAC1CC,aAAa;gBAAEP,MAAMG;gBAAMG,SAASH,KAAKK,GAAG;YAAC;YAC7CC,iBAAiB;gBAAET,MAAMH;YAAO;YAChCa,yBAAyB;gBAAEV,MAAML,gBAAM,CAACgB,KAAK,CAACC,KAAK;YAAC;QACrD;KACA;IACDC,gBAAgB;QAAEb,MAAMC;QAAQK,SAAS;IAAE;IAC3CQ,cAAc;QAAEd,MAAMG;QAAMG,SAAS;IAAK;AAC3C,GACA;IACCS,YAAY;IACZC,YAAY;AACb;AAGD,MAAMC,WAAWC,IAAAA,eAAK,EAAc,OAAOxB;MAE3C,WAAeuB"}