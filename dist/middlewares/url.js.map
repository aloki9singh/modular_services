{"version":3,"sources":["../../src/middlewares/url.ts"],"sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport ShortenedURL from \"../models/url.model\"; // Update the path accordingly\r\nimport validator from \"validator\";\r\nimport { findExistingURL } from \"../services/url\";\r\n\r\n// Middleware function to check if the URL is expired\r\nexport const isExpired = async (\r\n\treq: Request,\r\n\tres: Response,\r\n\tnext: NextFunction,\r\n): Promise<void> => {\r\n\ttry {\r\n\t\tconst shortId = req.params.shortId; // Assuming the short ID is in the request parameters\r\n\r\n\t\t// Find the shortened URL in the database\r\n\t\tconst url = await ShortenedURL.findOne({ short_id: shortId });\r\n\r\n\t\t// Check if the URL exists\r\n\t\tif (!url) {\r\n\t\t\tres.status(404).json({ error: \"URL not found\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check if the URL is expired\r\n\t\tif (\r\n\t\t\turl.status === \"expired\" ||\r\n\t\t\t(url.expiration_date && new Date() > new Date(url.expiration_date))\r\n\t\t) {\r\n\t\t\turl.status = \"expired\";\r\n\t\t\tawait url.save();\r\n\t\t\tres.status(400).json({ error: \"URL has expired\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If the URL is active and not expired, continue with the next middleware or route handler\r\n\t\tnext();\r\n\t} catch (error) {\r\n\t\tconsole.error(\"Error checking URL expiration:\", error);\r\n\t\tres.status(500).json({ error: \"Internal server error\" });\r\n\t}\r\n};\r\n\r\nexport const check_expire = async (\r\n\treq: Request,\r\n\tres: Response,\r\n\tnext: NextFunction,\r\n): Promise<void> => {\r\n\tconst DOMAIN = process.env.CORS_ORIGINS;\r\n\tconst { original_url } = req.body;\r\n\ttry {\r\n\t\t// Validate the original_url\r\n\t\tif (!validator.isURL(original_url)) {\r\n\t\t\tres.status(400).json({ error: \"Invalid URL format\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//finding existing URL\r\n\t\tconst existing_url = await findExistingURL(original_url);\r\n\r\n\t\t//Checking if existing url is expired or not\r\n\t\tif (existing_url) {\r\n\t\t\tif (\r\n\t\t\t\texisting_url.status === \"expired\" ||\r\n\t\t\t\t(existing_url.expiration_date &&\r\n\t\t\t\t\tnew Date() > new Date(existing_url.expiration_date))\r\n\t\t\t) {\r\n\t\t\t\t//updating url expiration date\r\n\t\t\t\texisting_url.expiration_date = new Date(\r\n\t\t\t\t\tDate.now() + 365 * 24 * 60 * 60 * 1000,\r\n\t\t\t\t);\r\n\t\t\t\texisting_url.status = \"active\";\r\n\t\t\t\tawait existing_url.save();\r\n\t\t\t\tres.json({\r\n\t\t\t\t\tshort_url: existing_url.short_url,\r\n\t\t\t\t\tshort_id: existing_url.short_id\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tres.json({\r\n\t\t\t\tshort_url: existing_url.short_url,\r\n\t\t\t\tshort_id: existing_url.short_id\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tnext();\r\n\t} catch (error) {\r\n\t\tconsole.log(\"error while checking original url existance\", error);\r\n\t\tres.status(500).send(\"Internal server error\");\r\n\t}\r\n};\r\n"],"names":["check_expire","isExpired","req","res","next","shortId","params","url","ShortenedURL","findOne","short_id","status","json","error","expiration_date","Date","save","console","DOMAIN","process","env","CORS_ORIGINS","original_url","body","validator","isURL","existing_url","findExistingURL","now","short_url","log","send"],"mappings":";;;;;;;;;;;IA0CaA,YAAY;eAAZA;;IApCAC,SAAS;eAATA;;;mDALY;oDACH;qBACU;;;;;;AAGzB,MAAMA,YAAY,OACxBC,KACAC,KACAC;IAEA,IAAI;QACH,MAAMC,UAAUH,IAAII,MAAM,CAACD,OAAO;QAGlC,MAAME,MAAM,MAAMC,iBAAY,CAACC,OAAO,CAAC;YAAEC,UAAUL;QAAQ;QAG3D,IAAI,CAACE,KAAK;YACTJ,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,OAAO;YAAgB;YAC9C;QACD;QAGA,IACCN,IAAII,MAAM,KAAK,aACdJ,IAAIO,eAAe,IAAI,IAAIC,SAAS,IAAIA,KAAKR,IAAIO,eAAe,GAChE;YACDP,IAAII,MAAM,GAAG;YACb,MAAMJ,IAAIS,IAAI;YACdb,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,OAAO;YAAkB;YAChD;QACD;QAGAT;IACD,EAAE,OAAOS,OAAO;QACfI,QAAQJ,KAAK,CAAC,kCAAkCA;QAChDV,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,OAAO;QAAwB;IACvD;AACD;AAEO,MAAMb,eAAe,OAC3BE,KACAC,KACAC;IAEA,MAAMc,SAASC,QAAQC,GAAG,CAACC,YAAY;IACvC,MAAM,EAAEC,YAAY,EAAE,GAAGpB,IAAIqB,IAAI;IACjC,IAAI;QAEH,IAAI,CAACC,kBAAS,CAACC,KAAK,CAACH,eAAe;YACnCnB,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,OAAO;YAAqB;YACnD;QACD;QAGA,MAAMa,eAAe,MAAMC,IAAAA,oBAAe,EAACL;QAG3C,IAAII,cAAc;YACjB,IACCA,aAAaf,MAAM,KAAK,aACvBe,aAAaZ,eAAe,IAC5B,IAAIC,SAAS,IAAIA,KAAKW,aAAaZ,eAAe,GAClD;gBAEDY,aAAaZ,eAAe,GAAG,IAAIC,KAClCA,KAAKa,GAAG,KAAK,MAAM,KAAK,KAAK,KAAK;gBAEnCF,aAAaf,MAAM,GAAG;gBACtB,MAAMe,aAAaV,IAAI;gBACvBb,IAAIS,IAAI,CAAC;oBACRiB,WAAWH,aAAaG,SAAS;oBACjCnB,UAAUgB,aAAahB,QAAQ;gBAChC;gBACA;YACD;YACAP,IAAIS,IAAI,CAAC;gBACRiB,WAAWH,aAAaG,SAAS;gBACjCnB,UAAUgB,aAAahB,QAAQ;YAChC;YACA;QACD;QACAN;IACD,EAAE,OAAOS,OAAO;QACfI,QAAQa,GAAG,CAAC,+CAA+CjB;QAC3DV,IAAIQ,MAAM,CAAC,KAAKoB,IAAI,CAAC;IACtB;AACD"}