{"version":3,"sources":["../../src/routes/AuthRoutes.ts"],"sourcesContent":["// Import necessary modules and types from Express\r\nimport express, { Router } from \"express\";\r\nimport { AuthController } from \"../controllers/auth.controller\";\r\nimport { Routes } from \"@interfaces/routes.interface\";\r\n\r\n// Class definition for AuthRoutes implementing the Routes interface\r\nclass AuthRoutes implements Routes {\r\n\t// Define the base path for these routes\r\n\tpublic path = \"/\";\r\n\r\n\t// Create an Express Router instance\r\n\tpublic router = Router();\r\n\r\n\t// Create an instance of AuthController for handling authentication-related routes\r\n\tpublic authController = new AuthController();\r\n\r\n\t// Constructor to initialize routes\r\n\tconstructor() {\r\n\t\tthis.initializeRoutes();\r\n\t}\r\n\r\n\t// Method to initialize authentication-related routes\r\n\tprivate initializeRoutes() {\r\n\t\t// Route to initiate the authentication process\r\n\t\t// this.router.get(`${this.path}`, AuthController.authenticateUser);\r\n\t\tthis.router.get(`${this.path}`, AuthController.authenticateUser);\r\n\r\n\t\t// Route to handle the OAuth callback after user authorization\r\n\t\tthis.router.get(\r\n\t\t\t`${this.path}google/redirect`,\r\n\t\t\tAuthController.handleOAuthCallback,\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Export the AuthRoutes class\r\nexport default AuthRoutes;\r\n"],"names":["AuthRoutes","initializeRoutes","router","get","path","AuthController","authenticateUser","handleOAuthCallback","constructor","Router","authController"],"mappings":";;;;+BAoCA;;;eAAA;;;yBAnCgC;gCACD;;;;;;;;;;;;;;AAI/B,IAAA,AAAMA,aAAN,MAAMA;IAgBGC,mBAAmB;QAG1B,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,CAAC,EAAEC,8BAAc,CAACC,gBAAgB;QAG/D,IAAI,CAACJ,MAAM,CAACC,GAAG,CACd,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,eAAe,CAAC,EAC7BC,8BAAc,CAACE,mBAAmB;IAEpC;IAfAC,aAAc;QATd,uBAAOJ,QAAO;QAGd,uBAAOF,UAASO,IAAAA,eAAM;QAGtB,uBAAOC,kBAAiB,IAAIL,8BAAc;QAIzC,IAAI,CAACJ,gBAAgB;IACtB;AAcD;MAGA,WAAeD"}