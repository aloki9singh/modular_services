{"version":3,"sources":["../../src/services/2factor.service.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nclass TwoFactorService {\r\n\tprivate readonly apiKey: string;\r\n\r\n\tconstructor() {\r\n\t\tthis.apiKey = process.env.TWOFACTOR_API_KEY || \"random key\";\r\n\r\n\t\tif (!this.apiKey) {\r\n\t\t\tthrow new Error(\"2FACTOR API key not provided.\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync sendOTP(identifier: string, otp: number): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.post(\r\n\t\t\t\t`https://2factor.in/API/V1/${this.apiKey}/SMS/+91${identifier}/${otp}`,\r\n\t\t\t\t{},\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: true,\r\n\t\t\t\tmessage: \"OTP sent successfully\",\r\n\t\t\t\tresponse: response.data,\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Failed to send OTP with 2FACTOR: ${error.message}`,\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default TwoFactorService;\r\n"],"names":["TwoFactorService","sendOTP","identifier","otp","response","axios","post","apiKey","headers","success","message","data","error","Error","constructor","process","env","TWOFACTOR_API_KEY"],"mappings":";;;;+BAsCA;;;eAAA;;;gDAtCkB;;;;;;;;;;;;;;;;;;;AAElB,IAAA,AAAMA,mBAAN,MAAMA;IAWL,MAAMC,QAAQC,UAAkB,EAAEC,GAAW,EAAgB;QAC5D,IAAI;YACH,MAAMC,WAAW,MAAMC,cAAK,CAACC,IAAI,CAChC,CAAC,0BAA0B,EAAE,IAAI,CAACC,MAAM,CAAC,QAAQ,EAAEL,WAAW,CAAC,EAAEC,IAAI,CAAC,EACtE,CAAC,GACD;gBACCK,SAAS;oBACR,gBAAgB;gBACjB;YACD;YAGD,OAAO;gBACNC,SAAS;gBACTC,SAAS;gBACTN,UAAUA,SAASO,IAAI;YACxB;QACD,EAAE,OAAOC,OAAO;YACf,MAAM,IAAIC,MACT,CAAC,iCAAiC,EAAED,MAAMF,OAAO,CAAC,CAAC;QAErD;IACD;IA9BAI,aAAc;QAFd,uBAAiBP,UAAjB,KAAA;QAGC,IAAI,CAACA,MAAM,GAAGQ,QAAQC,GAAG,CAACC,iBAAiB,IAAI;QAE/C,IAAI,CAAC,IAAI,CAACV,MAAM,EAAE;YACjB,MAAM,IAAIM,MAAM;QACjB;IACD;AAyBD;MAEA,WAAeb"}